- @sensors.each do |s|
  - max_min_data = s.max_and_min_data( 21 )
  - max_for_chart = max_min_data.collect{ |d| [d[:day], ( d[:max] * 1.8000 + 32.00 ).round(1)] }
  - min_for_chart = max_min_data.collect{ |d| [d[:day], ( d[:min] * 1.8000 + 32.00 ).round(1)] }

  %h2
    = "#{s.name}"
    %small
      = "#{c_to_f( s.latest_value )}"
      = "#{s.latest_value_observed_at.strftime("%B %-d, %Y at %-l:%M%P")}"

  = line_chart [{ name: "", data: @values_for_chart[s.id]}], library: { curveType: 'none', lineWidth: '0.5', pointSize: 0 }, colors: ['FFC873'], min: nil, max: nil, height: '400px'

  = line_chart [{ name: "", data: [max_for_chart, min_for_chart]}], library: { curveType: 'bezier', lineWidth: '0.5', pointSize: 0 }, colors: ['AA0000', '0000AA'], min: nil, max: nil, height: '400px'


  %table.table.small.table-condensed
    %tr
      %th
        Day
      - max_min_data.each do |data|
        %td
          = data[:day].strftime("%b %-d")
    %tr
      %th
        Max
      - max_min_data.each do |data|
        %td
          = ( data[:max] * 1.8000 + 32.00 ).round(1)
    %tr
      %th
        Min
      - max_min_data.each do |data|
        %td
          = ( data[:min] * 1.8000 + 32.00 ).round(1)


