- max_min_data = s.max_and_min_data( 21 )

- if s.ds1820? || s.dp?
  - max_for_chart = max_min_data.collect{ |d| [d[:day], ( d[:max] * 1.8000 + 32.00 ).round(1)] }
- else
  - max_for_chart = max_min_data.collect{ |d| [d[:day], ( d[:max] ).round(1)] }

- if s.ds1820? || s.dp?
  - min_for_chart = max_min_data.collect{ |d| [d[:day], ( d[:min] * 1.8000 + 32.00 ).round(1)] }
- else
  - min_for_chart = max_min_data.collect{ |d| [d[:day], ( d[:min] ).round(1)] }


%h2
  = link_to "#{s.name}", s
  %small
    - if s.ds1820? || s.dp?
      = "#{c_to_f( s.latest_value )}"
    - else
      = "#{( s.latest_value )}"

    = "#{s.latest_value_observed_at.strftime("%B %-d, %Y at %-l:%M%P")}"

= line_chart [{ name: "", data: values_for_chart[s.id]}], library: { curveType: 'none', lineWidth: '0.5', pointSize: 0 }, colors: ['FFC873'], min: nil, max: nil, height: '400px'

= line_chart [{ name: "Max", data: max_for_chart}, { name: "Min", data: min_for_chart}], library: { curveType: 'function', lineWidth: '0.5', pointSize: 0 }, colors: ['AA0000', '0000AA'], min: nil, max: nil, height: '400px'


%table.table.small.table-condensed
  %tr
    %th
      Day
    - max_min_data.each do |data|
      %td
        = data[:day].strftime("%b %-d")
  %tr
    %th
      Max
    - max_min_data.each do |data|
      %td
        - if s.ds1820? || s.dp?
          = ( data[:max] * 1.8000 + 32.00 ).round(1)
        - else
          = ( data[:max] ).round(1)
  %tr
    %th
      Min
    - max_min_data.each do |data|
      %td
        - if s.ds1820? || s.dp?
          = ( data[:min] * 1.8000 + 32.00 ).round(1)
        - else
          = ( data[:min] ).round(1)



